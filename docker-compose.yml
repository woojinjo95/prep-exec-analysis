version: "3.8"

services:
  backend:
    container_name: backend
    image: registry.dev-nextlab.com/prep-exec-analysis-backend:dev-0
    build:
      context: ./backend
      dockerfile: dockerfile.dev
    command: /start-reload.sh
    platform: linux/amd64
    ports:
      - 5000:80
    volumes:
      - ./backend/app:/app
      - ./data/workspace:/app/workspace

  frontend:
    container_name: frontend
    image: registry.dev-nextlab.com/prep-exec-analysis-frontend:dev-0
    build:
      context: ./frontend
      dockerfile: dockerfile.development
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules/
    ports:
      - 3000:80
    stdin_open: true

  mongodb:
    container_name: mongodb
    image: mongo:4.4.2
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: .nextlab6318!
    volumes:
      - mongodb_data:/data/db

  mediamtx:
    image: aler9/rtsp-simple-server:v0.23.8
    ports:
      - "8554:8554" # RTSP
      - "9997:9997" # API
      - "9998:9998" # Prometheus
      - "8889:8889" # WebRTC -> more config needed in docker
      - "8888:8888" # HLS
    volumes:
      - "./media/mediamtx.yml:/mediamtx.yml"
    logging:
      options:
        max-file: "3"
        max-size: "250m"

  media:
    image: registry.dev-nextlab.com/prep-exec-media:dev-0
    restart: always
    build:
      context: ./media
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD:
      USER: ${USER}
    devices:
      - "/dev/video0:/dev/video0"
    privileged: true
    volumes:
      - "$HOME/.ssh:/app/static/keys"
      - "./data/videos:/app/videos"
      - "./logs:/app/logs"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  control:
    image: registry.dev-nextlab.com/prep-exec-control:dev-0
    restart: always
    build:
      context: ./control
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD:
      USER: ${USER}
    devices:
      - "/dev/ttyUSB0:/dev/ttyUSB0"
      - "/dev/ttyUSB1:/dev/ttyUSB1"
    privileged: true
    volumes:
      - "$HOME/.ssh:/app/static/keys"
      - "./logs:/app/logs"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  network:
    image: registry.dev-nextlab.com/prep-exec-network:dev-0
    restart: always
    build:
      context: ./network
    environment:
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      REDIS_PASSWORD:
      USER: ${USER}
    privileged: true
    network_mode: host
    volumes:
      - "$HOME/.ssh:/app/static/keys"
      - "./logs:/app/logs"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  watcher:
    image: registry.dev-nextlab.com/prep-exec-watcher:dev-0
    restart: always
    build:
      context: ./watcher
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD:
      USER: ${USER}
    volumes:
      - "./logs:/app/logs"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  replay:
    container_name: replay
    image: registry.dev-nextlab.com/prep-exec-replay:dev-0
    restart: always
    build:
      context: ./replay
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD:
      USER: ${USER}
    privileged: true

  adminer:
    container_name: adminer
    image: dockette/adminer:full
    ports:
      - 8082:80

  redis:
    container_name: redis
    restart: always
    image: redis:7.0.4
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

  redis-commander:
    container_name: redis-commander
    restart: always
    image: rediscommander/redis-commander:latest
    platform: linux/amd64
    environment:
      - REDIS_HOSTS=hardware:redis:6379:0
        collector:redis:6379:3
    ports:
      - 8081:8081

  stb-log:
    container_name: stb-log
    restart: always
    image: registry.dev-nextlab.com/prep-exec-analysis-stblog:dev-0
    build:
      context: ./stb_log
      dockerfile: Dockerfile
    command: python -u main.py
    volumes:
      - "adb-rsa:/root/.android"
      - "./logs:/app/logs"
  
  shell:
    container_name: shell
    image: registry.dev-nextlab.com/qaas-shell:dev-2
    command: python -u process.py
    build:
      context: ./shell
      dockerfile: Dockerfile.dev.m32dev4
    ports:
      - 5005:80
    volumes:
      - ./shell/app:/app
      - "adb-rsa:/root/.android"
volumes:
  mongodb_data: {}
  redis_data: {}
  adb-rsa: null
